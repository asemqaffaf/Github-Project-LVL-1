{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/Jozza/Github-Project-LVL-1/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport Add from \"./components/Add\";\nimport Table from './components/Table';\nimport axios from \"axios\";\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repos: [{\n        id: 40,\n        title: 'Array',\n        status: 'Private',\n        language: 'HTML'\n      }, {\n        id: 50,\n        title: 'Object',\n        status: 'Public',\n        language: 'JavaScript'\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.getElementsFromServer();\n    };\n\n    this.deleteHandler = id => {\n      console.log(id);\n      axios.get(\"http://localhost:9000/delete/\".concat(id)).then(item => {}); // const newArray = this.state.repos.filter((item,i)=>{\n      // return   item.id !== id\n      // })\n      // this.setState({\n      //   repos : newArray\n      // })\n    };\n\n    this.checkHandler = id => {\n      this.state.repos.map((item, i) => {\n        if (item.id === id) {\n          // item.status = !item.status\n          if (item.status === \"Public\") {\n            item.status = \"Private\";\n          } else {\n            item.status = \"Public\";\n          }\n        }\n\n        return item;\n      });\n      this.setState({\n        repos: this.state.repos\n      });\n    };\n\n    this.addHandler = item => {\n      console.log(item.title);\n      axios.post('http://localhost:9000/post', {\n        title: item.title,\n        language: item.language,\n        status: item.status\n      }).then(res => {\n        console.log();\n        this.setState({\n          repos: res.data\n        });\n      });\n    };\n\n    this.getElementsFromServer = () => {\n      axios.get('http://localhost:9000/getAll').then(a => {\n        console.log(a.data);\n        this.setState({\n          repos: a.data\n        });\n      });\n    };\n  }\n\n  render() {\n    const repos = this.state.repos;\n    const deleteHandler = this.deleteHandler;\n    return React.createElement(\"div\", {\n      style: {\n        border: 'black 1px solid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"App\"), React.createElement(\"button\", {\n      onClick: this.getElementsFromServer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"get Elements From Server \"), React.createElement(Add, {\n      add: this.addHandler,\n      array: repos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Table, {\n      array: repos,\n      delete: deleteHandler,\n      check: this.checkHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/owner/Desktop/Jozza/Github-Project-LVL-1/Client/src/App.js"],"names":["React","Component","Add","Table","axios","App","state","repos","id","title","status","language","componentDidMount","getElementsFromServer","deleteHandler","console","log","get","then","item","checkHandler","map","i","setState","addHandler","post","res","data","a","render","border"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Add from \"./components/Add\"\nimport Table from './components/Table';\nimport axios from \"axios\"\nexport default class App extends Component {\n  state = {\n    repos: [\n      {\n        id: 40,\n        title: 'Array',\n        status: 'Private',\n        language: 'HTML'\n      },\n      {\n        id: 50,\n        title: 'Object',\n        status: 'Public',\n        language: 'JavaScript'\n      }\n    ]\n  };\n  componentDidMount=()=>{\n    this.getElementsFromServer()\n  }\n  deleteHandler =(id)=>{\n    console.log(id);\n \n    axios.get(`http://localhost:9000/delete/${id}`)\n    .then((item)=>{\n      \n    })\n    // const newArray = this.state.repos.filter((item,i)=>{\n    // return   item.id !== id\n    // })\n    // this.setState({\n    //   repos : newArray\n    // })\n  }\n  checkHandler = (id)=>{\n     this.state.repos.map((item,i)=>{\n      if (item.id === id){\n          // item.status = !item.status\n          if(item.status === \"Public\" ){\n            item.status = \"Private\"\n          }\n          else{\n            item.status = \"Public\"\n          }\n      }\n      return item;\n    }\n    )\n    this.setState({\n      repos : this.state.repos\n    })\n  }\n  addHandler = (item)=>{\n    console.log(item.title);\n    axios.post('http://localhost:9000/post', {title : item.title , language : item.language, status : item.status})\n    .then(res=>{\n      console.log();\n     this.setState({\n       repos : res.data\n     })\n    })\n \n  }\n  getElementsFromServer=()=>{\n    axios.get('http://localhost:9000/getAll')\n   .then(a=>{\n     console.log(a.data);\n    this.setState({\n      repos : a.data\n    })\n   }) \n\n  }\n  render() {\n    const {repos} = this.state\n    const {deleteHandler} = this\n    return (\n      <div style={{ border: 'black 1px solid' }}>\n        <h6>App</h6>\n        <button onClick={this.getElementsFromServer} >get Elements From Server </button>\n        <Add add={this.addHandler} array={repos} ></Add>\n        <Table array={repos} delete={deleteHandler} check={this.checkHandler}  ></Table>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}